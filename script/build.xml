<project name="as3-yaul" default="[create-zip]"> 

	<property file="project.properties" />

	<fail message="The 'FLEX_HOME' property must be set in your global ANT properties!" unless="FLEX_HOME"/>
	<fail message="The 'EXECUTABLE_EXTENSION' property must be set in your global ANT properties!" unless="EXECUTABLE_EXTENSION"/>

	<target name="[compile-swc]" description="creates as3-yaul library">
		<exec executable="${compc}" dir="${basedir}" failonerror="true">
			<arg line="-o '${deploy.dir}/${binary.name}.swc'" />
			<arg line="-sp '${src.dir}'" />
			<arg line="-is '${src.dir}'" />
			<arg line="-el '${libs.dir}'" />
			<arg line="-el '${playerglobal.swc}'" />
			<arg line="-target-player ${target.player}" />
		</exec>
	</target>

	<target name="[generate-asdoc]" description="Generate documentation">
		<mkdir dir="${docs.local.dir}"/>
		<delete includeemptydirs="true">
			<fileset dir="${docs.local.dir}" includes="**/*" />
		</delete>
		<exec executable="${asdoc}" spawn="no">
			<arg line="-o '${docs.local.dir}'" />
			<arg line="-l '${libs.dir}'" />
			<arg line="-sp '${src.dir}'" />
			<arg line="-ds '${src.dir}' " />
			<arg line="-l '${flex.lib.dir}' " />
			<arg line="-target-player ${target.player}" />
			<arg line="-window-title 'Adobe ActionScript 3.0 Library - ${project.title}'" />
		</exec>
	</target>

	<target name="[create-zip]" description="create download zip" depends="[clean],[compile-swc],[generate-asdoc]">
		<mkdir dir="${deploy.dir}/zip/dependencies"/>
		<mkdir dir="${deploy.dir}/zip/release"/>
		<mkdir dir="${deploy.dir}/zip/docs"/>
		<copy todir="${deploy.dir}/zip/release">
			<fileset dir="${deploy.dir}">
				<include name="*.swc"/>
			</fileset>
		</copy>
		<copy todir="${deploy.dir}/zip/dependencies">
			<fileset dir="${libs.dir}">
				<include name="hamcrest-as3*.swc"/>
				<include name="mockito-*.swc"/>
				<include name="spicelib-flash-*.swc"/>
			</fileset>
		</copy>
		<copy todir="${deploy.dir}/zip/docs">
			<fileset dir="${docs.local.dir}">
				<include name="**"/>
			</fileset>
		</copy>
		<zip destfile="${deploy.dir}/${binary.name}.zip">
			<fileset dir="${deploy.dir}/zip" />
		</zip>
		<delete dir="${deploy.dir}/zip" includeemptydirs="true">
		</delete>
	</target>

	<target name="[clean]" description="remove folders generated by the build">
		<delete dir="${deploy.dir}" quiet="true" includeemptydirs="true"/>
		<delete dir="${docs.local.dir}" quiet="true" includeemptydirs="true"/>
	</target>

</project>